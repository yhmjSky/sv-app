name: Auto Database Setup

on:
  schedule:
    - cron: '0 0 1 * *' # 每月1号 UTC 00:00
  workflow_dispatch:
    inputs:
      year:
        description: 'Target year (YYYY)'
        required: false
        default: ''
        type: string
      month:
        description: 'Target month (MM)'
        required: false
        default: ''
        type: string
      dry_run:
        description: 'Dry run mode'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '20'

permissions:
  contents: write
  issues: write

jobs:
  setup-database:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup environment
        run: |
          echo "CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" >> $GITHUB_ENV
          echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV

      - name: Run setup script
        id: setup
        shell: bash
        run: |
          echo "🤖 Running auto-setup..."
          ARGS=""
          if [ -n "${{ github.event.inputs.year }}" ]; then ARGS="$ARGS --year ${{ github.event.inputs.year }}"; fi
          if [ -n "${{ github.event.inputs.month }}" ]; then ARGS="$ARGS --month ${{ github.event.inputs.month }}"; fi
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then ARGS="$ARGS --dry-run"; fi
          echo "node scripts/auto-setup-database.js $ARGS"
          if node scripts/auto-setup-database.js $ARGS; then
            echo "setup-success=true" >> $GITHUB_OUTPUT
          else
            echo "setup-success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Commit and push if changed
        if: steps.setup.outputs.setup-success == 'true' && github.event.inputs.dry_run != true
        shell: bash
        run: |
          if git diff --quiet -- wrangler.jsonc; then
            echo "No changes to commit"
          else
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config user.name "github-actions[bot]"
            git add wrangler.jsonc
            git commit -m "🤖 Auto-update D1 binding for $(date +'%Y-%m')" -m "Automated database configuration update" || true
            git push
          fi

      - name: Create deployment issue
        if: steps.setup.outputs.setup-success == 'true' && github.event.inputs.dry_run != true
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const date = new Date();
            const year = context.payload.inputs?.year || date.getFullYear();
            const month = context.payload.inputs?.month || (date.getMonth() + 1);
            const yearMonth = `${year}-${String(month).padStart(2, '0')}`;
            const databaseName = `d1_${year}${String(month).padStart(2, '0')}`;
            try {
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `🚀 Deploy database setup for ${yearMonth}`,
                body: `新的数据库配置已自动创建并提交到仓库。\n\n- 数据库名称: \`${databaseName}\`\n- 配置文件: \`wrangler.jsonc\` 已更新\n- 提交时间: ${new Date().toISOString()}\n\n请手动触发部署流程以应用新的数据库配置。`,
                labels: ['database', 'auto-setup', 'deployment', 'automation']
              });
              core.info(`Created issue #${issue.data.number}`);
            } catch (error) {
              core.warning(`Failed to create issue: ${error.message}`);
            }

      - name: Summary
        if: always()
        run: |
          echo "## Auto Database Setup Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Setup Success: ${{ steps.setup.outputs.setup-success || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dry Run: ${{ github.event.inputs.dry_run || false }}" >> $GITHUB_STEP_SUMMARY
